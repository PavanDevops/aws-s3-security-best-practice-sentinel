import "tfplan/v2" as tfplan

//find all new aws_s3_bucket that is not private or default(computed)

violatingS3Buckets = filter tfplan.resource_changes as _, rc {
			rc.type is "aws_s3_bucket" and
			rc.mode is "managed" and
			(rc.change.actions contains "create" or rc.change.actions contains "update")  and
			(rc.change.after.acl else null not in ["private", null])
}

for violatingS3Buckets as _,bucket{
	print(bucket.address+"'s acl is : " + bucket.change.after.acl + ", this is not compliant.") 
}

//debug
// print(violatingS3Buckets)

//see if the list is empty
allow_private_only = rule {
	length(violatingS3Buckets) == 0
}


main = rule {
	allow_private_only
}